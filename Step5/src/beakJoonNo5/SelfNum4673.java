//백준 4673번 문제 셀프 넘버, 함수 d를 정의하여 문제를 해결해 봅시다.

package beakJoonNo5;

public class SelfNum4673 {

	public static void main(String[] args) {
		
		int A = 0;							//변수 선언
		int B[] = new int [10040];			// 배열서넌
		
		for(int i=1;i<10000;i++)			// 10000번 반복
		{
			if(i<100)						// 100이하 일때
			{
				A = i+(i/10)+(i%10);		//원래수 + 10의자리 + 1의자리
				B[A] = 1;					// 배열의 값을 1로 넣음 
			}
			else if(i<1000)
			{
				A = i+(i/100)+(i/10%10)+(i%10);	//원래수 + 100의자리 + 10의자리 + 1의자리
				B[A] = 1;					// 배열의 값을 1로 넣음 
			}
			else
			{
				A = i+(i/1000)+(i/100%10)+(i/10%10)+(i%10); //원래수 + 1000의자리 + 100의자리 + 10의자리 + 1의자리
				B[A] = 1;					// 배열의 값을 1로 넣음 
			}
			
		}
		for(int j=1;j<10000;j++)			//10000번 반복
		{
			if(B[j] != 1)					// j를 순서대로 반복하고 없는번호는 그 값이 0이 되어있기 때문에 1이 아닌것을 찾는다.
			{
				System.out.println(j);		// 출력 
			}
		}

	}

}
